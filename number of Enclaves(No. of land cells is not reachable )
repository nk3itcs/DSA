class Solution {
public:
    void dfs(int row,int col,int n,int m,vector<vector<int>> &vis,vector<vector<int>>grid){

        vis[row][col]=1;
        int drow[]={-1,0,1,0};
        int dcol[]={0,1,0,-1};

        for(int k=0;k<4;k++){
            int nrow=row+drow[k];
            int ncol=col+dcol[k];
            if(nrow>=0 and nrow<n and ncol>=0 and ncol<m and vis[nrow][ncol]==0 and grid[nrow][ncol]==1){
                dfs(nrow,ncol,n,m,vis,grid);
            }
        }
    }
    int numEnclaves(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();

        vector<vector<int>> vis(n,vector<int>(m,0));

        for(int j=0;j<m;j++){

            if(vis[0][j]==0 and grid[0][j]==1){
                dfs(0,j,n,m,vis,grid);
            }
            if(vis[n-1][j]==0 and grid[n-1][j]==1){
                dfs(n-1,j,n,m,vis,grid);
            }
        }

        for(int i=0;i<n;i++){

            if(vis[i][0]==0 and grid[i][0]==1){
                dfs(i,0,n,m,vis,grid);
            }
            if(vis[i][m-1]==0 and grid[i][m-1]==1){
                dfs(i,m-1,n,m,vis,grid);
            }
        }

        int landCell=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]==0 and grid[i][j]==1)
                    landCell++;
            }
        
        }
        return landCell;         
    }
};
